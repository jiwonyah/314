package com.uow.project.favorite;

import java.security.Principal;
import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.uow.project.list.Buy;
import com.uow.project.list.Rent;
import com.uow.project.list.RentService;
import com.uow.project.user.SiteUser;
import com.uow.project.user.UserService;

import lombok.RequiredArgsConstructor;

@Controller
@RequiredArgsConstructor
public class RentFavoriteController {
    private final RentFavoriteService rentFavoriteService;
    private final RentService rentService;
    private final UserService userService;

    // 즐겨찾기 기능은 좀 더 구체적인 자원의 '분류' 또는 '하위 자원'을 나타냅니다. 단순한 상태변경이 아님
    // 이 경우, /favorites 경로는 특정 게시글에 대한 즐겨찾기라는 하위 자원을 나타내며, 
    // 이를 통해 게시글 자원과는 별개로 즐겨찾기라는 독립적인 도메인 또는 기능을 명시적으로 표현합니다.
    @PostMapping("/rent/detail/{id}/favorite")
    public String toggleFavorite(@PathVariable("id") Integer rentId, Principal principal, RedirectAttributes redirectAttributes) {
        Rent rent = rentService.getRent(rentId);
        SiteUser user = userService.getUser(principal.getName());

        if (rentFavoriteService.existsByRentAndUser(rent, user)) {
            rentFavoriteService.removeFromFavorite(rent, user);
            redirectAttributes.addFlashAttribute("message", "Removed from favorites");
        } else {
            rentFavoriteService.addToFavorite(rent, user);
            redirectAttributes.addFlashAttribute("message", "Added to favorites");
        }

        return "redirect:/rent/detail/" + rentId;
    }
    @GetMapping("/favorites")
    public String showFavorites(Model model, Principal principal) {
        SiteUser user = userService.getUser(principal.getName());
        List<Rent> favoriteRents = rentFavoriteService.getFavoriteRents(user);
        model.addAttribute("favoriteRents", favoriteRents);
        return "favorites";
    }

}

