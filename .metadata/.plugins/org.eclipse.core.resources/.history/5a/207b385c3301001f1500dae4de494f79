package com.uow.project.profile;

import java.util.Optional;

import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

//import com.uow.project.user.CurrentUser;
import com.uow.project.user.SiteUser;
import com.uow.project.user.UserRepository;

import lombok.RequiredArgsConstructor;

@Controller
@RequiredArgsConstructor
public class ProfileController {

    private final UserRepository userRepository;

    @GetMapping("/profile/{username}")
    public String userProfile(@PathVariable String username,Model model) {
        // Spring Security를 사용하여 현재 사용자의 인증 정보를 가져옵니다.
        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();

        if (authentication == null || authentication.getName().equals("anonymousUser")) {
            // 사용자가 없으면 예외 처리 또는 적절한 대체 동작을 수행합니다.
            return "guestAlert";
        }
        
        // 사용자가 로그인되어 있으면 프로필 페이지를 표시합니다.
        Optional<SiteUser> user = userRepository.findByusername(username);

        // 모델에 사용자 정보를 추가하여 프로필 페이지로 전달합니다.
        user.ifPresent(u -> model.addAttribute("user", u));
        return "profile";
    }

    
}
