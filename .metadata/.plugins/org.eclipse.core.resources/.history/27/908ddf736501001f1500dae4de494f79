package com.uow.project.user;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;

import org.hibernate.Hibernate;

import jakarta.persistence.*;
import lombok.*;
import java.util.Objects;
@Getter
@Setter
@Entity
public class SiteUser{

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(nullable = false, unique = true, length = 30)
    private String username;

    @Column(nullable = false)
    private String password;
    
    @Column(unique = true)  
    private String email;
    
    @Column(nullable=false)
    @Enumerated(EnumType.STRING)
    private Role role;
    
    private String firstName;
    
    private String lastName;

    private 
    
    @Embedded
    private Profile profile;

    
    @Embeddable
    @NoArgsConstructor(access = AccessLevel.PROTECTED) @AllArgsConstructor(access = AccessLevel.PROTECTED)
    @Builder @Getter @ToString
    public static class Profile {
        private String location = null;
        @Lob @Basic(fetch = FetchType.EAGER)
        private String image = null;
    }
    
    
//    public SiteUser(String username, String password) {
//        this.username = username;
//        this.password = password;
//    }
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || Hibernate.getClass(this) != Hibernate.getClass(o)) {
            return false;
        }
        SiteUser user = (SiteUser) o;
        return id != null && Objects.equals(id, user.id);
    }

    @Override
    public int hashCode() {
        return getClass().hashCode();
    }
    @PrePersist
    protected void onCreate() {
        if (this.role == Role.BUYER || this.role == Role.SELLER) {
            this.firstName = null;
            this.lastName = null;
        }
        
        if (this.role == Role.ADMIN) {
            this.email = null;
            this.firstName = null;
            this.lastName = null;
        }
    }   
}